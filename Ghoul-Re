if getgenv().AtlasUI then
    getgenv().AtlasUI:Destroy()
end

local plr = game.Players.LocalPlayer
local localplayer = plr

local function waitForCharacter()
    if not localplayer.Character or not localplayer.Character:FindFirstChild("HumanoidRootPart") then
        localplayer.CharacterAdded:Wait()
    end
end

waitForCharacter()


local Atlas = loadstring(game:HttpGet("https://raw.githubusercontent.com/Re3zf/3zf-Hub/refs/heads/main/UI%20Library"))()

local UI = Atlas.new({
    Name = "3zf Hub",
    ConfigFolder = "MyScript",
    Credit = "Made By Re3zf",
    Color = Color3.fromRGB(255, 0, 0),
    Bind = "RightShift",
    UseLoader = true,
    FullName = "3zf Hub",
    CheckKey = function(inputtedKey)
        return inputtedKey == "."
    end,
    Discord = "https://discord.gg/sRSkHm4FnZ"
})

local ez = false
local eze = false
local ze = false
getgenv().esp = false
getgenv().Health_Esp = false
getgenv().Hunger_Esp = false
getgenv().MobsEsp = false
getgenv().MobsHealth_Esp = false


local MyPage = UI:CreatePage("Main")

local MySection = MyPage:CreateSection("OP")

MySection:CreateToggle({ 
	Name = "One Shot Mobs"; 
	Flag = "One_Shot"; 
	Default = false; 
	Callback = function(newValue)
	  ze = newValue
        if ze then
        else
        end
	end;
	SavingDisabled = true;
	Warning = "Be Careful To Not Use It Infront Of Someone"; 
	WarningIcon = 11110093949; 
})

local MyPage = UI:CreatePage("Farm")

local MyPage = UI:CreatePage("Esp")

local MySection = MyPage:CreateSection("Players")

MySection:CreateToggle({ 
	Name = "Esp"; 
	Flag = "Hightlighting_Esp"; 
	Default = false; 
	Callback = function(newValue)  
		  getgenv().esp = newValue
	end;
	SavingDisabled = true;
	Warning = ""; 
	WarningIcon = 12345; 
})

MySection:CreateToggle({ 
	Name = "Health Esp"; 
	Flag = "Health_Esp"; 
	Default = false; 
	Callback = function(newValue)  
		  getgenv().Health_Esp = newValue
	end;
	SavingDisabled = true;
	Warning = ""; 
	WarningIcon = 12345; 
})

MySection:CreateToggle({ 
	Name = "Hunger Esp"; 
	Flag = "Hunger_Esp"; 
	Default = false; 
	Callback = function(newValue)  
		  getgenv().Hunger_Esp = newValue
	end;
    SavingDisabled = true;
	Warning = ""; 
	WarningIcon = 12345; 
})

local MySection = MyPage:CreateSection("Mobs")

MySection:CreateToggle({ 
	Name = "Mobs Esp"; 
	Flag = "Mobs_Hightlighting_Esp"; 
	Default = false; 
	Callback = function(newValue)  
		  getgenv().MobsEsp = newValue
	end;
    SavingDisabled = true;
	Warning = ""; 
	WarningIcon = 12345; 
})

MySection:CreateToggle({ 
	Name = "Mobs Health Esp"; 
	Flag = "MobsHealth_Esp"; 
	Default = false; 
	Callback = function(newValue)  
		  getgenv().MobsHealth_Esp = newValue
	end;
    SavingDisabled = true;
	Warning = ""; 
	WarningIcon = 12345; 
})


local MySection = MyPage:CreateSection("View")


MySection:CreateButton({
	Name = "Nofog"; 
	Callback = function()  
		local Lighting = game.Lighting

game.Lighting.FogEnd = 100000
	for i,v in pairs(Lighting:GetDescendants()) do
		if v:IsA("Atmosphere") then
			v:Destroy()
		end
	end
	end
})

MySection:CreateButton({
	Name = "Full Bright"; 
	Callback = function()  
		local Lighting =  game.Lighting

Lighting.Brightness = 2
Lighting.ClockTime = 14
Lighting.FogEnd = 100000
Lighting.GlobalShadows = false
Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
	end
})

local MyPage = UI:CreatePage("Misc")


local MySection = MyPage:CreateSection("Hunger")


MySection:CreateToggle({ 
	Name = "Auto Drink Wine (Helter Skelter)"; 
	Flag = "Auto_Drink_Wine"; 
	Default = false; 
	Callback = function(newValue)  
		        ez = newValue
        if ez then
        else
        end
	end;
	
	Warning = ""; 
	WarningIcon = 12345; 
})

MySection:CreateToggle({ 
	Name = "Auto Drink Coffee (Anteiku)"; 
	Flag = "Auto_Drink_Coffee"; 
	Default = false; 
	Callback = function(newValue)  
		        eze = newValue
        if eze then
        else
        end
	end;
	
	Warning = ""; 
	WarningIcon = 12345;
})

MySection:CreateSlider({ 
	Name = "Cooldown"; 
	Flag = "Cooldown_for_auto_hunger"; 
	Min = 0.5; 
	Max = 5; 
	AllowOutOfRange = false; 
	Digits = 2; 
	Default = 0.5; 
	Callback = function(newValue)  
		cooldown = newValue
	end;
	
	Warning = ""; 
	WarningIcon = 12345; 
})

local MySection = MyPage:CreateSection("Player")

local UserInputService = game:GetService("UserInputService")
local mouse = plr:GetMouse()
local flying = false

if workspace:FindFirstChild("Core") then
    workspace.Core:Destroy()
end

local Core = Instance.new("Part")
Core.Name = "Core"
Core.Size = Vector3.new(0.05, 0.05, 0.05)

spawn(function()
    Core.Parent = workspace
    local Weld = Instance.new("Weld", Core)
    Weld.Part0 = Core
    Weld.Part1 = localplayer.Character:FindFirstChild("HumanoidRootPart")
    Weld.C0 = CFrame.new(0, 0, 0)
end)

workspace:WaitForChild("Core")

local hrp = workspace.Core
local speed = 10
local keys = {a = false, d = false, w = false, s = false}
local e1, e2

local function start()
    local pos = Instance.new("BodyPosition", hrp)
    local gyro = Instance.new("BodyGyro", hrp)
    pos.Name = "EPIXPOS"
    pos.maxForce = Vector3.new(math.huge, math.huge, math.huge)
    pos.position = hrp.Position
    gyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
    gyro.cframe = hrp.CFrame
    
    repeat
        wait()
        localplayer.Character.Humanoid.PlatformStand = true
        local new = gyro.cframe - gyro.cframe.p + pos.position
        
        if not keys.w and not keys.s and not keys.a and not keys.d then
            speed = 5
        end
        if keys.w then
            new = new + workspace.CurrentCamera.CoordinateFrame.lookVector * speed
        end
        if keys.s then
            new = new - workspace.CurrentCamera.CoordinateFrame.lookVector * speed
        end
        if keys.d then
            new = new * CFrame.new(speed, 0, 0)
        end
        if keys.a then
            new = new * CFrame.new(-speed, 0, 0)
        end
        
        if speed > 10 then
            speed = 5
        end
        
        pos.position = new.p
        
        if keys.w then
            gyro.cframe = workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad(speed * 0), 0, 0)
        elseif keys.s then
            gyro.cframe = workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(math.rad(speed * 0), 0, 0)
        else
            gyro.cframe = workspace.CurrentCamera.CoordinateFrame
        end
    until not flying
    
    pos:Destroy()
    gyro:Destroy()
    flying = false
    localplayer.Character.Humanoid.PlatformStand = false
    speed = 10
end

MySection:CreateKeybind({
    Name = "Fly", 
    Flag = "Fly_Keybind", 
    Default = "J", 
    Callback = function(key)  
    end,
    KeyPressed = function() 
	if UserInputService:GetFocusedTextBox() then return end
        flying = not flying
        if flying then
            start()
        end
    end,
    Warning = "Change the keybind to whatever you want", 
    WarningIcon = 1111099912782345 
})

mouse.KeyDown:Connect(function(key)
    if key == "w" then
        keys.w = true
    elseif key == "s" then
        keys.s = true
    elseif key == "a" then
        keys.a = true
    elseif key == "d" then
        keys.d = true
    end
end)

mouse.KeyUp:Connect(function(key)
    if key == "w" then
        keys.w = false
    elseif key == "s" then
        keys.s = false
    elseif key == "a" then
        keys.a = false
    elseif key == "d" then
        keys.d = false
    end
end)

MySection:CreateButton({
	Name = "Destroy CGG Base Barriers";
	Callback = function()  
		
for i = 1, 2 do
	local ccgbarrier = workspace.MapSide:FindFirstChild("CCGBarrier")
	if ccgbarrier then
        ccgbarrier:Destroy()
	end
    task.wait() 
end
	end
})

MySection:CreateButton({
	Name = "Destroy Helter Skelter Barriers"; 
	Callback = function()  
for i = 1, 4 do
	local barrier = workspace.MapSide:FindFirstChild("GhoulBarrier")
	if  barrier then
        barrier:Destroy()
	end
    task.wait() 
end
	end
})

MySection:CreateButton({
	Name = "Destroy Anteiku Barriers"; 
	Callback = function()  
for i = 1, 2 do
	local anteiku = workspace.MapSide:FindFirstChild("GhoulBarrier")
	if anteiku then
        anteiku:Destroy()
	end
    task.wait() 
end
	end
})

MySection:CreateButton({
	Name = "Destroy Aogiri Base Barriers";
	Callback = function()  
		for i = 1, 2 do
	local Shellfs = workspace.MapSide.AogiriSecretDoor.Parts:FindFirstChild("Base")
	if Shellfs then
        Shellfs:Destroy()
	end
    task.wait() 
end

for i = 1, 14 do
	local book = workspace.MapSide.AogiriSecretDoor.Parts:FindFirstChild("Books")
	if book then
        book:Destroy()
	end
    task.wait() 
end


local Wall = workspace.MapSide.AogiriSecretDoor:FindFirstChild("Hidden Door")
if Wall then
    Wall:Destroy()
end

local AogiriBase = workspace.MapSide:FindFirstChild("AogiriBarrier")
if AogiriBase then
    AogiriBase:Destroy()
end
	end
})

local MySection = MyPage:CreateSection("VERY VERY SECRET HE HE")

MySection:CreateButton({
	Name = "SECRET"; 
	Callback = function()  
		local sound = Instance.new("Sound")
sound.SoundId = "rbxassetid://111022323196285"
sound.Parent = workspace
sound:Play()
	end
})


task.spawn(function()
    while true do
        if ez then
            local args = {
                [1] = {
                    [1] = {
                        ["Name"] = "Wine Seller",
                        ["Position"] = Vector3.new(9128.3740234375, 13.56887435913086, 895.0400390625)
                    },
                    [2] = "\4"
                }
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Bridgenet2Main"):WaitForChild("dataRemoteEvent"):FireServer(unpack(args))
            local args = {
                [1] = {
                    [1] = {
                        ["Message"] = "Can I get you something?",
                        ["Choice"] = "I'd like the special.",
                        ["Name"] = "Wine Seller",
                        ["Choices"] = {
                            [1] = "No thanks.",
                            [2] = "I'd like the special.",
                            [3] = "(Check Rank Up Requirements)"
                        },
                        ["Properties"] = {
                            ["RegularDelay"] = 0.02,
                            ["DotDelay"] = 0,
                            ["Name"] = "Val",
                            ["Sound"] = "rbxassetid://6929790120"
                        },
                        ["Part"] = 1,
                        ["NPCName"] = ""
                    },
                    [2] = "\3"
                }
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Bridgenet2Main"):WaitForChild("dataRemoteEvent"):FireServer(unpack(args))
			local args = {
                [1] = {
                    [1] = {
                        ["Message"] = "Here you go, my friend. Enjoy it.",
                        ["Choice"] = "...",
                        ["Name"] = "Wine Seller",
                        ["Choices"] = {
                            [1] = "..."
                        },
                        ["Properties"] = {
                            ["RegularDelay"] = 0.02,
                            ["DotDelay"] = 0,
                            ["Name"] = "Val",
                            ["Sound"] = "rbxassetid://6929790120"
                        },
                        ["Part"] = 2,
                        ["NPCName"] = ""
                    },
                    [2] = "\3"
                }
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Bridgenet2Main"):WaitForChild("dataRemoteEvent"):FireServer(unpack(args))
        end
		task.wait(cooldown)
    end
end)



task.spawn(function()
    while true do
        if eze then
    local args = {
    [1] = {
        [1] = {
            ["Name"] = "Coffee Seller",
            ["Position"] = Vector3.new(8485.9169921875, 5.316739559173584, 1696.8125)
        },
        [2] = "\4"
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("Bridgenet2Main"):WaitForChild("dataRemoteEvent"):FireServer(unpack(args))
local args = {
    [1] = {
        [1] = {
            ["Message"] = "Can I get you something?",
            ["Choice"] = "i'd like some coffee please.",
            ["Name"] = "Coffee Seller",
            ["Choices"] = {
                [1] = "No thanks.",
                [2] = "i'd like some coffee please."
            },
            ["Properties"] = {
                ["RegularDelay"] = 0.02,
                ["DotDelay"] = 0,
                ["Name"] = "Amaya Sasaki",
                ["Sound"] = "rbxassetid://6929790120"
            },
            ["Part"] = 1,
            ["NPCName"] = ""
        },
        [2] = "\3"
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("Bridgenet2Main"):WaitForChild("dataRemoteEvent"):FireServer(unpack(args))
local args = {
    [1] = {
        [1] = {
            ["Message"] = "Here you go. Enjoy it.",
            ["Choice"] = "...",
            ["Name"] = "Coffee Seller",
            ["Choices"] = {
                [1] = "..."
            },
            ["Properties"] = {
                ["RegularDelay"] = 0.02,
                ["DotDelay"] = 0,
                ["Name"] = "Amaya Sasaki",
                ["Sound"] = "rbxassetid://6929790120"
            },
            ["Part"] = 2,
            ["NPCName"] = ""
        },
        [2] = "\3"
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("Bridgenet2Main"):WaitForChild("dataRemoteEvent"):FireServer(unpack(args))
end
		task.wait(cooldown)
    end
end)



task.spawn(function()
    while true do
        if ze then
            for _, mob in pairs(workspace.Entities:GetChildren()) do
                pcall(function()
                    if mob:IsA("Model") and mob:FindFirstChildOfClass("Humanoid") and mob:FindFirstChild("HumanoidRootPart") then
                        local playerChar = game.Players.LocalPlayer.Character
                        if playerChar and playerChar:FindFirstChild("HumanoidRootPart") then
                            local mobHRP = mob.HumanoidRootPart
                            local playerHRP = playerChar.HumanoidRootPart

                            local mobName = string.lower(mob.Name) -- Convert to lowercase for case insensitivity
                            local range = 35 -- Default range

                            if mobName:find("^noro") or mobName:find("^eto") or mobName:find("^tatara") then
                                range = 125
                            elseif mobName:find("^humanoid") then
                                range = 35
                            end

                            local distance = (mobHRP.Position - playerHRP.Position).Magnitude
                            if distance <= range then
                                local directionToPlayer = (playerHRP.Position - mobHRP.Position).unit
                                local mobLookDirection = mobHRP.CFrame.LookVector
                                local dotProduct = mobLookDirection:Dot(directionToPlayer)

                                if dotProduct > 0.5 then 
                                    mob:FindFirstChildOfClass("Humanoid").Health = 0
                                end
                            end
                        end
                    end
                end)
            end
        end
        task.wait()
    end
end)



local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

local function applyHighlight(player)
    if player == LocalPlayer then return end
    if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then return end
    
    local character = player.Character
    local highlight = character:FindFirstChild("Highlight")

    if getgenv().esp then
        if not highlight then
            highlight = Instance.new("Highlight")
            highlight.Name = "Highlight"
            highlight.Adornee = character
            highlight.Parent = character
            highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
            highlight.FillColor = Color3.fromRGB(255, 0, 0)
            highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
            highlight.FillTransparency = 0.5
            highlight.OutlineTransparency = 0
        end
    else
        if highlight then
            highlight:Destroy()
        end
    end
end

local function onCharacterAdded(character)
    repeat task.wait() until character:FindFirstChild("HumanoidRootPart")
    applyHighlight(Players:GetPlayerFromCharacter(character))
end

local function onPlayerAdded(player)
    player.CharacterAdded:Connect(onCharacterAdded)
    if player.Character then
        onCharacterAdded(player.Character)
    end
end

local function onPlayerRemoving(player)
    if player.Character then
        local highlight = player.Character:FindFirstChild("Highlight")
        if highlight then
            highlight:Destroy()
        end
    end
end

for _, player in pairs(Players:GetPlayers()) do
    if player ~= LocalPlayer then
        onPlayerAdded(player)
    end
end

Players.PlayerAdded:Connect(onPlayerAdded)
Players.PlayerRemoving:Connect(onPlayerRemoving)

RunService.Heartbeat:Connect(function()
    for _, player in pairs(Players:GetPlayers()) do
        applyHighlight(player)
    end
end)



local PlayersFolder = workspace:WaitForChild("Entities") 
local RunService = game:GetService("RunService")
local localPlayer = game.Players.LocalPlayer

local function createPlayerHealthBar(playerModel)
    if playerModel == localPlayer.Character then return end

    local player = game.Players:GetPlayerFromCharacter(playerModel)
    if not player then return end 
    
    local humanoid = playerModel:FindFirstChild("Humanoid")
    local rootPart = playerModel:FindFirstChild("HumanoidRootPart")
    if not humanoid or not rootPart then return end

    if not getgenv().Health_Esp then
        if rootPart:FindFirstChild("HealthBar") then
            rootPart.HealthBar:Destroy()
        end
        return
    end

    if rootPart:FindFirstChild("HealthBar") then return end 

    local billboard = Instance.new("BillboardGui")
    billboard.Name = "HealthBar"
    billboard.Size = UDim2.new(0.2, 0, 4, 0) 
    billboard.StudsOffset = Vector3.new(-2, 0, 0) 
    billboard.AlwaysOnTop = true
    billboard.Parent = rootPart

    local bgFrame = Instance.new("Frame")
    bgFrame.Size = UDim2.new(1, 0, 1, 0)
    bgFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50) 
    bgFrame.BorderSizePixel = 0
    bgFrame.Parent = billboard

    local healthFrame = Instance.new("Frame")
    healthFrame.Name = "HealthFill"
    healthFrame.Size = UDim2.new(1, 0, 0, 0) 
    healthFrame.BackgroundColor3 = Color3.fromRGB(0, 255, 0) 
    healthFrame.BorderSizePixel = 0
    healthFrame.Position = UDim2.new(0, 0, 1, 0) 
    healthFrame.Parent = bgFrame

    local function updateBar()
        if not getgenv().Health_Esp then
            if billboard then billboard:Destroy() end
            return
        end
        
        if humanoid and healthFrame then
            local maxHealth = humanoid.MaxHealth
            local healthPercent = math.clamp(humanoid.Health / maxHealth, 0, 1) 
            
            healthFrame.Size = UDim2.new(1, 0, healthPercent, 0) 
            healthFrame.Position = UDim2.new(0, 0, 1 - healthPercent, 0) 
        end
    end

    humanoid.HealthChanged:Connect(updateBar)
    updateBar()
end

local function setupExistingPlayers()
    for _, playerModel in pairs(PlayersFolder:GetChildren()) do
        if playerModel:IsA("Model") then
            createPlayerHealthBar(playerModel)
        end
    end
end

PlayersFolder.ChildAdded:Connect(function(playerModel)
    if playerModel:IsA("Model") then
        repeat wait() until playerModel:FindFirstChild("HumanoidRootPart") and playerModel:FindFirstChild("Humanoid")
        createPlayerHealthBar(playerModel)
    end
end)

local function removeAllPlayerHealthBars()
    for _, playerModel in pairs(PlayersFolder:GetChildren()) do
        if playerModel:IsA("Model") then
            local rootPart = playerModel:FindFirstChild("HumanoidRootPart")
            if rootPart and rootPart:FindFirstChild("HealthBar") then
                rootPart.HealthBar:Destroy()
            end
        end
    end
end

setupExistingPlayers()

RunService.Heartbeat:Connect(function()
    if not getgenv().Health_Esp then
        removeAllPlayerHealthBars()
    else
        for _, playerModel in pairs(PlayersFolder:GetChildren()) do
            if playerModel:IsA("Model") then
                if not playerModel:FindFirstChild("HumanoidRootPart") or not playerModel:FindFirstChild("Humanoid") then
                    continue
                end
                if not playerModel:FindFirstChild("HumanoidRootPart"):FindFirstChild("HealthBar") then
                    createPlayerHealthBar(playerModel)
                end
            end
        end
    end
end)




local PlayersFolder = workspace:WaitForChild("Entities")
local RunService = game:GetService("RunService")

local localPlayer = game.Players.LocalPlayer

local function createHungerBar(playerModel)
    if playerModel == localPlayer.Character then return end

    local player = game.Players:GetPlayerFromCharacter(playerModel)
    if not player then return end

    local rootPart = playerModel:FindFirstChild("HumanoidRootPart")
    local hungerValue = playerModel:FindFirstChild("Hunger")

    if not rootPart or not hungerValue or not hungerValue:IsA("NumberValue") then return end

    if not getgenv().Hunger_Esp then
        if rootPart:FindFirstChild("HungerBar") then
            rootPart.HungerBar:Destroy()
        end
        return
    end

    if rootPart:FindFirstChild("HungerBar") then return end 

    local billboard = Instance.new("BillboardGui")
    billboard.Name = "HungerBar"
    billboard.Size = UDim2.new(0.2, 0, 4, 0)
    billboard.StudsOffset = Vector3.new(2, 0, 0)
    billboard.AlwaysOnTop = true
    billboard.Parent = rootPart

    local bgFrame = Instance.new("Frame")
    bgFrame.Size = UDim2.new(1, 0, 1, 0)
    bgFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    bgFrame.BorderSizePixel = 0
    bgFrame.Parent = billboard

    local hungerFrame = Instance.new("Frame")
    hungerFrame.Name = "HungerFill"
    hungerFrame.Size = UDim2.new(1, 0, 0, 0)
    hungerFrame.BackgroundColor3 = Color3.fromRGB(255, 165, 0)
    hungerFrame.BorderSizePixel = 0
    hungerFrame.Position = UDim2.new(0, 0, 1, 0)
    hungerFrame.Parent = bgFrame

    local function updateBar()
        if not getgenv().Hunger_Esp then
            if billboard then billboard:Destroy() end
            return
        end

        if hungerValue and hungerFrame then
            local maxHunger = 100
            local hungerPercent = math.clamp(hungerValue.Value / maxHunger, 0, 1)

            hungerFrame.Size = UDim2.new(1, 0, hungerPercent, 0)
            hungerFrame.Position = UDim2.new(0, 0, 1 - hungerPercent, 0)
        end
    end

    hungerValue.Changed:Connect(updateBar)
    updateBar()
end

local function setupExistingPlayers()
    for _, playerModel in pairs(PlayersFolder:GetChildren()) do
        if playerModel:IsA("Model") then
            createHungerBar(playerModel)
        end
    end
end

PlayersFolder.ChildAdded:Connect(function(playerModel)
    if playerModel:IsA("Model") then
        repeat wait() until playerModel:FindFirstChild("HumanoidRootPart") and playerModel:FindFirstChild("Hunger")
        createHungerBar(playerModel)
    end
end)

local function removeAllHungerBars()
    for _, playerModel in pairs(PlayersFolder:GetChildren()) do
        if playerModel:IsA("Model") then
            local rootPart = playerModel:FindFirstChild("HumanoidRootPart")
            if rootPart and rootPart:FindFirstChild("HungerBar") then
                rootPart.HungerBar:Destroy()
            end
        end
    end
end

setupExistingPlayers()

RunService.Heartbeat:Connect(function()
    if not getgenv().Hunger_Esp then
        removeAllHungerBars()
    else
        for _, playerModel in pairs(PlayersFolder:GetChildren()) do
            if playerModel:IsA("Model") then
                local rootPart = playerModel:FindFirstChild("HumanoidRootPart")
                if rootPart and not rootPart:FindFirstChild("HungerBar") then
                    createHungerBar(playerModel)
                end
            end
        end
    end
end)



local RunService = game:GetService("RunService")
local EntitiesFolder = workspace:FindFirstChild("Entities")

local function applyHighlight(mob)
    if not getgenv().MobsEsp then return end
    if not mob:IsA("Model") or not mob:FindFirstChild("HumanoidRootPart") then return end
    if not mob.Name:match("^Humanoid_") then return end

    local rootPart = mob:FindFirstChild("HumanoidRootPart")

    if not rootPart:FindFirstChild("MobHighlight") then
        local highlight = Instance.new("Highlight")
        highlight.Name = "MobHighlight"
        highlight.Adornee = mob
        highlight.Parent = rootPart
        highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
        highlight.FillColor = Color3.fromRGB(0, 0, 255)
    end
end

local function removeMobHighlight(mob)
    if mob:FindFirstChild("HumanoidRootPart") then
        local rootPart = mob.HumanoidRootPart
        if rootPart:FindFirstChild("MobHighlight") then
            rootPart.MobHighlight:Destroy()
        end
    end
end

local function updateESP()
    if not getgenv().MobsEsp then
        for _, mob in pairs(EntitiesFolder:GetChildren()) do
            if mob:IsA("Model") and mob.Name:match("^Humanoid_") then
                removeMobHighlight(mob)
            end
        end
        return
    end

    for _, mob in pairs(EntitiesFolder:GetChildren()) do
        if mob:IsA("Model") and mob.Name:match("^Humanoid_") then
            applyHighlight(mob)
        end
    end
end

RunService.Heartbeat:Connect(updateESP)

if EntitiesFolder then
    EntitiesFolder.ChildAdded:Connect(function(mob)
        task.wait()
        applyHighlight(mob)
    end)

    EntitiesFolder.ChildRemoved:Connect(removeMobHighlight)
end




local mhEntitiesFolder = workspace:WaitForChild("Entities") 
local mhRunService = game:GetService("RunService")

local function mhcreateMobHealthBar(mhmobModel)
    if not getgenv().MobsHealth_Esp then return end
    if not mhmobModel:FindFirstChild("HumanoidRootPart") then return end
    if not mhmobModel.Name:match("^Humanoid_") then return end 

    local mhrootPart = mhmobModel:FindFirstChild("HumanoidRootPart")
    
    if mhrootPart:FindFirstChild("MobHealthBar") then return end 

    local mhhealthValue = mhmobModel:FindFirstChild("Humanoid") 
    if not mhhealthValue then return end

    local mhbillboard = Instance.new("BillboardGui")
    mhbillboard.Name = "MobHealthBar" 
    mhbillboard.Size = UDim2.new(0.2, 0, 4, 0) 
    mhbillboard.StudsOffset = Vector3.new(-2, 0, 0) 
    mhbillboard.AlwaysOnTop = true
    mhbillboard.Parent = mhrootPart

    local mhbgFrame = Instance.new("Frame")
    mhbgFrame.Size = UDim2.new(1, 0, 1, 0)
    mhbgFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50) 
    mhbgFrame.BorderSizePixel = 0
    mhbgFrame.Parent = mhbillboard

    local mhhealthFrame = Instance.new("Frame")
    mhhealthFrame.Name = "HealthFill"
    mhhealthFrame.Size = UDim2.new(1, 0, 0, 0) 
    mhhealthFrame.BackgroundColor3 = Color3.fromRGB(0, 255, 0) 
    mhhealthFrame.BorderSizePixel = 0
    mhhealthFrame.Position = UDim2.new(0, 0, 1, 0) 
    mhhealthFrame.Parent = mhbgFrame

    local function mhupdateMobHealthBar()
        if not getgenv().MobsHealth_Esp then
            if mhbillboard then mhbillboard:Destroy() end
            return
        end
        
        if mhhealthValue and mhhealthFrame then
            local mhmaxHealth = mhhealthValue.MaxHealth
            local mhhealthPercent = math.clamp(mhhealthValue.Health / mhmaxHealth, 0, 1) 
            
            mhhealthFrame.Size = UDim2.new(1, 0, mhhealthPercent, 0) 
            mhhealthFrame.Position = UDim2.new(0, 0, 1 - mhhealthPercent, 0) 
        end
    end

    mhhealthValue.HealthChanged:Connect(mhupdateMobHealthBar)
    mhupdateMobHealthBar()
end

local function mhsetupExistingMobsHealthBars()
    for _, mhmobModel in pairs(mhEntitiesFolder:GetChildren()) do
        if mhmobModel:IsA("Model") and mhmobModel.Name:match("^Humanoid_") then
            mhcreateMobHealthBar(mhmobModel)
        end
    end
end

mhEntitiesFolder.ChildAdded:Connect(function(mhmobModel)
    if mhmobModel:IsA("Model") and mhmobModel.Name:match("^Humanoid_") then
        repeat wait() until mhmobModel:FindFirstChild("HumanoidRootPart") and mhmobModel:FindFirstChild("Humanoid")
        mhcreateMobHealthBar(mhmobModel)
    end
end)

local function mhremoveAllMobHealthBars()
    for _, mhmobModel in pairs(mhEntitiesFolder:GetChildren()) do
        if mhmobModel:IsA("Model") and mhmobModel.Name:match("^Humanoid_") then
            local mhrootPart = mhmobModel:FindFirstChild("HumanoidRootPart")
            if mhrootPart and mhrootPart:FindFirstChild("MobHealthBar") then
                mhrootPart.MobHealthBar:Destroy()
            end
        end
    end
end

mhsetupExistingMobsHealthBars()

mhRunService.Heartbeat:Connect(function()
    if not getgenv().MobsHealth_Esp then
        mhremoveAllMobHealthBars()
    else
        for _, mhmobModel in pairs(mhEntitiesFolder:GetChildren()) do
            if mhmobModel:IsA("Model") and mhmobModel.Name:match("^Humanoid_") then
                if not mhmobModel:FindFirstChild("HumanoidRootPart") or not mhmobModel:FindFirstChild("Humanoid") then
                    continue
                end
                if not mhmobModel:FindFirstChild("HumanoidRootPart"):FindFirstChild("MobHealthBar") then
                    mhcreateMobHealthBar(mhmobModel)
                end
            end
        end
    end
end)


getgenv().AtlasUI = UI
